name: Publish to GitHub

on:
  push:
    branches:
      - master

env:
  CONFIGURATION: Release

jobs:
  build:
    # Sets permissions of the GITHUB_TOKEN to allow release creating
    permissions:
      packages: write
    environment:
      name: nuget
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup necessary dotnet SDKs
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Add the GitHub source
        run: dotnet nuget add source --name "github.com" "https://nuget.pkg.github.com/fsprojects/index.json"

      - name: Ensure NuGet package source mapping
        shell: pwsh
        run: |
          $nugetConfigPath = "$HOME/.nuget/NuGet/NuGet.Config"
          [xml]$nugetConfig = Get-Content $nugetConfigPath

          $packageSourceMapping = $nugetConfig.configuration.packageSourceMapping
          if ($packageSourceMapping -ne $null) {
              $packageSourceMapping.RemoveAll()
          } else {
              $packageSourceMapping = $nugetConfig.CreateElement("packageSourceMapping")
              $nugetConfig.configuration.AppendChild($packageSourceMapping)
          }

          $nugetSource = $nugetConfig.CreateElement("packageSource")
          $nugetSource.SetAttribute("key", "nuget.org")
          $nugetPattern = $nugetConfig.CreateElement("package")
          $nugetPattern.SetAttribute("pattern", "*")
          $nugetSource.AppendChild($nugetPattern)
          $packageSourceMapping.AppendChild($nugetSource)

          $nugetConfig.Save($nugetConfigPath)

      - name: Publish to GitHub
        env:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FAKE_DETAILED_ERRORS: true
        run: |
          chmod +x ./build.sh
          ./build.sh "PublishToGitHub"
